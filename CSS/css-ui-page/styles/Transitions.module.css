.container {
  display: flex;
  flex-direction: column;
  margin: 40px auto 5px;
  width: 80vw;
  align-items: center;
  /* border: 1px solid red; */
}
.container h1 {
  margin-bottom: 20px;
}

.buttonsDiv {
  margin: 10px 0 20px;
  width: 100%;
  display: flex;
  padding: 10px;
  justify-content: center;
}

.button {
  background-color: purple;
  height: 70px;
  width: 240px;
  border: none;
  border-radius: 5px;
  color: white;
  font-size: 14px;
  transition-property: background-color color width;
  transition-duration: 1000ms;
  /* transition-delay: 1400ms; */
}
.button:hover {
  background-color: rgb(137, 162, 238);
  color: black;
  width: 400px;
  cursor: pointer;
}

.buttonTwo {
  margin-left: 30px;
  border-radius: 5px;
  background-color: blue;
  height: 70px;
  width: 240px;
  border: none;
  color: white;
  font-size: 20px;
  transition: transform 400ms ease-in, color 300ms ease-out 1s;
}

.buttonTwo:hover {
  transform: scale(1.2);
  color: red;
  cursor: pointer;
}

.containerTwo {
  width: 700px;
  border-right: 1px solid turquoise;
  margin: 20px auto 30px;
}

.move {
  margin: 20px;
  background-color: skyblue;
  width: 120px;
  height: 70px;
  text-align: center;
  line-height: 70px;
  color: white;
  border-radius: 10px;
  cursor: pointer;
  transition-property: translate();
  transition-duration: 2s;
}

#ease {
  transition-timing-function: ease;
}
#linear {
  transition-timing-function: linear;
}
#ease-in {
  transition-timing-function: ease-in;
}
#ease-in-out {
  transition-timing-function: ease-in-out;
}
#ease-out {
  transition-timing-function: ease-out;
}

.move:hover{
  transform: translate(560px, 0)
}


.box {
  width: 200px;
  height: 200px;
  background-color: tomato;
  margin: 30px;
  text-align: center;
  vertical-align: middle;
  line-height: 200px;
  color: white;
  font-size: 20px;
  transition: transform 1.5s;
  /* specify origin of transformation: bottom, bottom left, right, top right etc..
  or percentage/pixel values (x:100%, y:100%). Start point is top left(value 0, 0)
  */
  /* transform-origin: 200px 100%; */
}

.translate:hover {
  transform: translate(100px, 0);
}

.scale:hover {
  transform: scale(1.3);
}

.rotate:hover {
  transform: rotate(90deg);
  /* or we can use words instead of degrees */
  transform: rotate(1turn);
}

.skew:hover {
  transform: skew(30deg, 20deg);
  /* transform: skewY(30deg) */
}

.box.origin {
  transform-origin: bottom right;
  /* transform-origin: 50% 50%; */
  /* pixels: */
  /* transform-origin: 200px 100px; */
}

.origin:hover {
  transform: rotate(90deg)
}

/* endless rotation ---> */
.box.endless{
  animation: rotation 2s infinite ease-in-out;
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}
/* <--- */

.zidx {
  perspective: 1000px;
  border: 1px solid blue;
  padding: 30px;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.img {
  width: 300px;
  height: 300px;
  background-color: wheat;
  transition: transform 1s;
}
.img.translateZ:hover{
  transform: translateZ(100px);
}

.img.rotateZ:hover{
  transform: rotateZ(60deg);
}

.img.rotateX:hover{
  transform: rotateX(80deg);
}

.img.rotateY:hover{
  transform: rotateY(80deg);
}

.play{
  margin: 30px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.play a {
  margin-top: 20px;
  width: 200px;
  height: 70px;
  border-radius: 5px;
  background-color: rgb(113, 167, 167);
  color: white;
  text-align: center;
  line-height: 70px;
  font-size: 20px;
  transition: all 600ms;
  
}

.play a:hover {
  background-color: rgb(76, 111, 111);
  width: 240px;
}

/* notes: */
/* from mdn:
          /* Apply to 1 property */
          /* property name | duration */
          /* transition: margin-right 4s; */

          /* property name | duration | delay */
          /* transition: margin-right 4s 1s; */

          /* property name | duration | easing function */
          /* transition: margin-right 4s ease-in-out; */

          /* property name | duration | easing function | delay */
          /* transition: margin-right 4s ease-in-out 1s; */

          /* Apply to 2 properties */
          /* transition: margin-right 4s, color 1s; */

          /* Apply to all changed properties */
          /* transition: all 0.5s ease-out; */

          /* Global values */
          /* transition: inherit;
          transition: initial;
          transition: revert;
          transition: unset; */ 
